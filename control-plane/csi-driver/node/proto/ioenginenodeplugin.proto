// The definition of ioengine node plugin gRPC interface.
// The node plugin service runs on all nodes running
// the IoEngine CSI node plugin, and is complementary
// to the CSI node plugin service.

// This interface is supposed to be independent on particular computing
// environment (i.e. kubernetes).

syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.examples.ioenginenodeplugin";
option java_outer_classname = "IoEngineNodePluginProto";

package ioenginenodeplugin;

// Service for freezing and unfreezing file systems.
service IoEngineNodePlugin {
  // Freeze the file system identified by the volume ID
  // no check is made if the file system had been previously frozen.
  rpc FreezeFS (FreezeFSRequest) returns (FreezeFSReply) {}
  // Unfreeze the file system identified by the volume ID,
  // no check is made if the file system had been previously frozen.
  rpc UnfreezeFS (UnfreezeFSRequest) returns (UnfreezeFSReply) {}
  // Find the volume identified by the volume ID, and return the mount type:
  // raw block or filesystem
  rpc FindVolume (FindVolumeRequest) returns (FindVolumeReply) {}
}

enum VolumeType {
  VOLUME_TYPE_FILESYSTEM = 0; // File system mount
  VOLUME_TYPE_RAWBLOCK = 1;   // Raw block device mount
}
// The request message containing ID of the volume to be frozen
message FreezeFSRequest {
  string volume_id = 1;
}

// The response message for the freeze request.
message FreezeFSReply {
}

// The request message containing ID of the volume to be unfrozen
message UnfreezeFSRequest {

  string volume_id = 1;
}

// The response message for the unfreeze request.
message UnfreezeFSReply {
}

// Message for request on a volume
message FindVolumeRequest {
  string volume_id = 1;
}

// Message for response to a request for a volume
message FindVolumeReply {
  VolumeType volume_type = 1;
}
